Generar un nuevo modelo para la entrada de cada hilo del blog, tiene que tener: título, subtítulo, cuerpo, autor, fecha, avatar (sale del autor)
Generar un nuevo modelo para comentarios de cada hilo, tiene que tener: cuerpo, autor, fecha, avatar (sale del autor)
Editar el modelo de jugador, para agregar avatar y nombre de usuario. Ver metodo de registro de usuario nuevo.
En caso de no encontrar nada mostrar no se encontró nada, en busquedas.
El registro de usuario debe permitir seleccionar un avatar o bien agregar uno propio.
Editar perfil del usuario logueado.
Investigar un contenido en editor de texto avanzado (ckeditor por ejemplo) para lo que es el cuerpo del hilo o comentario.
Restrigir todo a usuario logueado, salvo la vista del contenido de los hilos.
Hacer el CRUD de los hilos.
Generar la clase Avatar y asociarla al usuario.


--- Si estamos con tiempo: Revisar como hacer diferenciar login de usuario admin como de usuario normal. (Permisos) Ver ultima afterclass (creo)


Nuevos comentarios:
8) Jugadores, generar vista para ver usuarios. JM

9) Retoques generales de estetica y elimanar basura JM/MR

10) -Generar documento de casos de prueba
    -Generar video de 10 minutos
    -Readme

12) Buscador en consola


Finalizados
3) Agregar avatares. LISTO
4) Ver Editar usuarios, que crea nuevos. LISTO
5) Agregar un boton para cambio de contraseña solamente. LISTO
7) Modificar el formulario de registro para que seleccione un avatar. LISTO
11) Buscador con paginacion. LISTO
6) Agregar imagenes de juegos. LISTO
1) Cada hilo, ver de asociar 1 juego y una consola. LISTO
2) Cada hilo, agregar comentarios. LISTO



busquedaJuego

</ul>
    <div style="position:absolute; top: 90%; left: 20%" class="pagination">
        <span class="step-links">
            {% if resultadoBusqueda.has_previous %}
                <a href="?{% if query %}nombre={{query}}&{% endif %}page={{ resultadoBusqueda.previous_page_number }}" style="color:lightgray">&laquo; Anterior</a>
            {% endif %}

            {% for i in resultadoBusqueda.paginator.page_range %}
            {% if resultadoBusqueda.number == i %}
                <li><a>{{ i }}</a></li>
            {% else %}
                <li><a href="?{% if query %}nombre={{query}}&{% endif %}page={{ i }}">{{ i }}</a></li>
            {% endif %}
            {% endfor %}

            {% if resultadoBusqueda.has_next %}
            <li>
            <a href="?{% if query %}nombre={{query}}&{% endif %}page={{ resultadoBusqueda.next_page_number }}">Siguiente</a>
            </li>
            <li>
            <a href="?{% if query %}nombre={{query}}&{% endif %}page={{ resultadoBusqueda.paginator.num_pages }}">Último &raquo;</a>
            </li>
        {% endif %}
        </span>
    </div>